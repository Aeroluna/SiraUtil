name: Build SiraUtil

on:
  push:
    branches: [ master ]
    paths: 
      - 'SiraUtil/**'
      - '.github/workflows/main.yml'
  pull_request:
    branches: [ master ]
    paths:  
      - 'SiraUtil/**'
      - '.github/workflows/main.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: GetStrippedRefs
      env:
        FILES_URL: ${{ secrets.BSFILES_URL }}
      run: wget --no-check-certificate "$FILES_URL" -q -O bsfiles.zip
    - name: ExtractRefs
      run: unzip -q -n bsfiles.zip -d ./Refs
    - name: Build
      id: Build
      env: 
        FrameworkPathOverride: /usr/lib/mono/4.7.2-api
      run: dotnet build --configuration Release
    - name: Echo Filename
      run: echo "$BUILDTEXT ($ASSEMBLYNAME)"
      env:
        BUILDTEXT: Filename=${{ steps.Build.outputs.filename }}
        ASSEMBLYNAME: AssemblyName=${{ steps.Build.outputs.assemblyname }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.Build.outputs.filename }}
        path: ./SiraUtil/bin/Release/Final
    - name: CopyPDB
      working-directory: ./SiraUtil/bin/Release
      run: cp ${{ steps.Build.outputs.assemblyname }}.pdb Final/Plugins/${{ steps.Build.outputs.assemblyname }}.pdb
    - name: Upload Artifact With PDB
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.Build.outputs.filename }}_WithPDB
        path: ./SiraUtil/bin/Release/Final
    - name: Generate Docs
      uses: nikeee/docfx-action@v1.0.0
      with:
        args: docs/docfx.json
    - name: Publish master site to GitHub pages
      shell: pwsh
      working-directory: ./docs
      run: |
        Move-Item "$env:ORIGIN_SITE/.git" _site
        Move-Item "$env:ORIGIN_SITE/$env:TAGS_DIR" _site
        Move-Item "$env:ORIGIN_SITE/$env:BRANCH_DIR" _site
        cd _site
        $ErrorActionPreference = "SilentlyContinue"
        git add -A 2>&1
        $srcMessage = (git show -s --format=%B $env:GITHUB_SHA) -join "`n"
        git commit -q -a -m "Generated Docs -- $srcMessage"
        git push -q origin gh-pages 
      if: github.ref == 'refs/heads/master'
    - name: Publish branch site to GitHub pages
      shell: pwsh
      working-directory: ./docs
      run: |
        $ErrorActionPreference = "Continue"
        $branchName = (git rev-parse --abbrev-ref=loose $env:GITHUB_REF) -join ""
        $srcMessage = (git show -s --format=%B $env:GITHUB_SHA) -join "`n"
        cd $env:ORIGIN_SITE
        if (-Not (Test-Path $env:BRANCH_DIR)) {
          New-Item -ItemType directory -Path $env:BRANCH_DIR
        }
        $branchPath = "$env:BRANCH_DIR/$branchName"
        if (Test-Path $branchPath) {
          # force remove it
          Get-ChildItem -Path $branchPath -Recurse | Remove-Item -Force -Recurse
          Remove-Item $branchPath -Force
        }
        # move generated into place
        Move-Item ../_site $branchPath
        git add -A 2>&1
        git commit -q -a -m "Generated Docs ($branchName) -- $srcMessage"
        git push -q origin gh-pages 
      if: github.ref != 'refs/heads/master'
